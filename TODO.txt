TODO ~~~

- "Small" things
	> Clean up player file
	>> Remove unnecessary things in .h, lines in .cpp
	> Give AnimatedSprite a sprite sheet
	> Give Vehicle an AnimatedSprite
	> Fix problem of having so many coordinate types
	>> Transformable, position vector, sprite position
	>> This fix will also aid in fixing hit boxes
	> COMMENTS
	> Fix ship updating things
	> Change player's collision box to ship's when in ship
	> Give Entity (or turret) an idle spin
	>> Maybe give Turret a range to spin in, flip bearing when beyond it
	>> Give Entity or Turret a "Target" Entity to try to attack
	>>> Also decides behavior - if no target, idle


- Inventory
	> different ship types
	> input from command line, spawn at your coords
	> make function to spawn at specific coords
	> add basic UI functionality
	> have ship selection screen, spawns at specific coords

- Map
	? Write map to file and load in, or just hardcode map in code
		> Loading requires writing code to both read and write
			maps from text, but opens the door up for a level 
			creation program.
		> Hardcoding is quicker, but not as flexible or easy to 
			make maps with
	> Test out Trigger functionality
	> Have basic interactions - zooming when in hangar, doors open

- Combat
	> Add parent to Projectile. Don't let parent interfere with projectile
	> When triggered (or Player nearby... even possibly make it
		check if the player is seen with angleBetween method), have
		turret turn towards the player, follow similar to how the 
		Player follows the mouse
	> Begin shooting at player
	> Add health to Entity
	> Have projectiles damage Entity on collision
	>> Projectile::onCollide deals damage in form of Entity::takeDamage(damage, parent)
	>> pass parent in in case onDestroy needs it (points?)
	> Destroy/Delete Entity on <=0 health
	>> call onDestroy() ?
	> We gots combat now yo